#include <Wire.h>
#include <Keyboard.h>
#include <Servo.h>
#include <EEPROM.h>
#include <LiquidCrystal.h>
int Button = 10;            

const byte numRows = 4;         
const byte numCols = 4; 
         
char keymap[numRows][numCols] =
{
  {'1', '2', '3', 'A'},
  {'4', '5','6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

char keypressed;               
char code [] = {'1', '2', '3', '4'}; 

char check1[sizeof(code)]; 
char check2[sizeof(code)]; 
 
short a = 0, i = 0, s = 0, j = 0;   

byte rowPins [numRows] = {2, 3, 4, 5}; 
byte colPins [numCols] = {6, 7, 8, 9}; 


// LiquidCrystal_I2C lcd (0x27, 16, 2);
// Keypad myKeypad = Keypad(makeKeymap(keymap), rowPins, colPins, numRows, numCols);
Servo myservo;
void setup ()
{
//  lcd.init ();
//  1cd.backlight ();
//  1cd.begin (16,2);
//  1cd.setCursor(0,0);
//    lcd.print("*ENTER THE CODE*");
//    lcd.setCursor(1,1);

//    lcd.print("For Candies");
    pinMode(Button, INPUT);
    myservo.attach(11);
    myservo.write(0);
}

void loop ()
{
//  keypressed = myKeypad.getKey();
    if (keypressed == '*') {
//      lcd.clear();
//      lcd.setCursor(0,0);
//      lcd.println("*ENTER THE CODE*");
//      ReadCode();
      if (a == sizeof(code))
//        openDoor();
//      else {
//        lcd.clear();
//        lcd.setCursor(1,0);
//        lcd.print("Try");
//        lcd.setCursor(6,0);
//        lcd.print ("Again");
//       lcd.setCursor(15,1);
//        lcd.print(" ");
//      lcd.setCursor(4,1);
//      lcd.print("Oopssssss");
//      }
      delay(2000);
//      lcd.clear();
//      lcd.setCursor(0,0);
//      lcd.print("*ENTER THE CODE*");
//      lcd.setCursor (1,1);

//      lcd.print("For CANDIES");
    }

//    If (digitalRead(Button) == HIGH) {
      myservo.write(0);
    }

//}

void ReadCode(){
  i=0;
  a=0;
  j=0;

  while (keypressed !='A'){
//    keypressed = myKeypad.getKey();
//    if (keypressed !=NO_KEY && keypressed != 'A') {
//  1cd.setCursor (j,1);
//  1cd.print("*");
    j++;
    if (keypressed == code[i] && i < sizeof(code)) {
      a++;
      i++;
    }
    else
      a--;
    }
 }
// keypressed = N0_KEY;

//}

void ChangeCode() {
//  lcd.clear();
//  lcd.print("Changing code");
  delay(1000);
//  lcd.clear();
//  lcd.print("Enter old code");
  ReadCode();

  if (a == sizeof (code)){
//    lcd.clear();
//    lcd.print("Changing code");
//    GetNewCode1();
//    GetNewCode2();
    s = 0;
    for (i = 0; i < sizeof(code); i++){
      if (check1 [i] == check2[i])
      s++;
    }
    if (s == sizeof(code)) {

//      for (i = 0; i < sizeof(code)) ; i++) {
      code [i] = check2[i]
//      EEPROM.put(i, code [i]);

     
//    }
//    lcd.clear();
//    lcd.print("Code Change");
    ;delay(2000);
    }
  else {
//    lcd.clear();
//    lcd.print("Codes are not");
//    lcd.setCursor(0,1);
//    lcd.print("matching !!");
    delay(2000);
  }
  
 }

 else {
//  lcd.clear();
//  lcd.print("Wrong");
  delay(2000);
  }
 }

 void GetNewCode1(){
  i = 0;
  j = 0;
//  lcd.clear();
//  lcd.print("Enter new code");
//  lcd.setCursor(0,1);
//  lcd.print("and press A");
  delay(2000);
//  lcd.clear();
//  lcd.setCursor(0,1);
//  lcd.print("and press A"); 

  while (keypressed != 'A') {
//    keypressed = myKeypad.getKey();
//    if (keypressed != NO_KEY && keypressed != 'A') {
//      lcd.setCursor(j,0);
//      lcd.print("*");
      check1[i] = keypressed;
      i++;
      j++;
    }
  }
//    keypressed = NO_KEY;
//  }

  void GetNewCode2(){
  i = 0;
  j = 0;
  
//  lcd.clear();
//  lcd.print("Confirm code");
//  lcd.setCursor(0,1);
//  lcd.print("and press A");
  delay(3000);
//  lcd.clear();
//  lcd.setCursor(0,1);
//  lcd.print("and press A"); 

  while (keypressed != 'A'){
//    keypressed = myKeypad.getKey();
//    if(keypressed != NO_KEY && keypressed != 'A' ){
//      lcd.setCursor(j,0);
//      lcd.print("*");
      check2[i] = keypressed; 
      i++;
      j++;
    }
  }
//  keypressed = N0_KEY;
// }

void OpenDoor() {
//  lcd.clear();
//  lcd.setCursor(1,0);
//  lcd.print("Have Fun");
//  lcd.setCursor(4, 1);
//  lcd.print("Enjoy Candies");
  myservo.write(90);

  
 }
